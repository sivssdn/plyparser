
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'NUMBER INT BEGIN END COMMA EQUALS ID EOL PLUS MINUS TIMES DIVIDE LPAREN RPARENprogram : BEGIN stmt END stmt : INT expr EOL \n\t\t\t| expression EOL\n\t\t\texpr : ID\n\t\t\t| ID COMMA expr\n\t\t\t| ID EQUALS NUMBER COMMA expr\n\t\t\t| ID EQUALS NUMBER\n\texpression : ID EQUALS term\n\t\t\n\t\tterm : NUMBER\n\t\t\t| ID\n\t\t\t| NUMBER PLUS term\n\t\t\t| ID PLUS term\n\t\t\t\n\t'
    
_lr_action_items = {'BEGIN':([0,],[1,]),'END':([5,9,12,],[10,-3,-2,]),'EOL':([4,7,8,15,16,17,18,19,23,24,25,],[9,12,-4,-9,-10,-8,-7,-5,-11,-12,-6,]),'INT':([1,],[3,]),'EQUALS':([6,8,],[11,13,]),'NUMBER':([11,13,20,21,],[15,18,15,15,]),'$end':([2,10,],[0,-1,]),'COMMA':([8,18,],[14,22,]),'PLUS':([15,16,],[20,21,]),'ID':([1,3,11,14,20,21,22,],[6,8,16,8,16,16,8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmt':([1,],[5,]),'expression':([1,],[4,]),'term':([11,20,21,],[17,23,24,]),'program':([0,],[2,]),'expr':([3,14,22,],[7,19,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> BEGIN stmt END','program',3,'p_program','parser.py',5),
  ('stmt -> INT expr EOL','stmt',3,'p_stmt','parser.py',7),
  ('stmt -> expression EOL','stmt',2,'p_stmt','parser.py',8),
  ('expr -> ID','expr',1,'p_expr','parser.py',11),
  ('expr -> ID COMMA expr','expr',3,'p_expr','parser.py',12),
  ('expr -> ID EQUALS NUMBER COMMA expr','expr',5,'p_expr','parser.py',13),
  ('expr -> ID EQUALS NUMBER','expr',3,'p_expr','parser.py',14),
  ('expression -> ID EQUALS term','expression',3,'p_expression','parser.py',18),
  ('term -> NUMBER','term',1,'p_term','parser.py',23),
  ('term -> ID','term',1,'p_term','parser.py',24),
  ('term -> NUMBER PLUS term','term',3,'p_term','parser.py',25),
  ('term -> ID PLUS term','term',3,'p_term','parser.py',26),
]
